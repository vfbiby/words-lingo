//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "sentence")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub sentence_id: i32,
    pub content_id: i32,
    pub sentence_order: i32,
    #[sea_orm(column_type = "Text")]
    pub sentence_text: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::content::Entity",
        from = "Column::ContentId",
        to = "super::content::Column::ContentId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Content,
    #[sea_orm(has_many = "super::sentence_word::Entity")]
    SentenceWord,
}

impl Related<super::content::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Content.def()
    }
}

impl Related<super::sentence_word::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SentenceWord.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
